@using TManagementOrders.Domain.Entities
@model ClientFilterViewModel

@{
    ViewData["Title"] = "Lista de Clientes";
}

<div class="container">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">Clientes</h2>
        <a asp-action="GotoCreateClintPage"
           asp-controller="Client"
           class="btn btn-primary">
            <i class="bi bi-plus-lg"></i> Novo Cliente
        </a>
    </div>

    <form asp-action="Index" method="get" class="mb-4">
        <div class="row">
            <div class="col-md-10">
                <input type="text"
                       name="filter"
                       value="@Model.Filter"
                       class="form-control"
                       placeholder="Filtrar por Nome ou Email..."
                       autocomplete="off" />
            </div>
            <div class="col-md-2 text-end">
                <button type="submit" class="btn btn-outline-secondary w-100">
                    <i class="bi bi-search"></i> Filtrar
                </button>
            </div>
        </div>
    </form>

    <table class="table table-bordered table-striped">
        <thead class="thead-dark">
            <tr>               
                <th>Nome</th>
                <th>Email</th>
                <th>Telefone</th>
                <th>Data de Registro</th>
                <th>Editar</th>
                <th>Deletar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var client in Model.Clients)
            {
                <tr>
                    <td>@client.Name</td>
                    <td>@client.Email</td>
                    <td>@client.Telephone</td>
                    <td>@client.DateRegister.ToString("dd/MM/yyyy")</td>
                    <td class="text-center">
                        <a asp-action="GotoEditClintPage"
                           asp-controller="Client"
                           asp-route-id="@client.Id"
                           class="btn btn-sm btn-outline-primary"
                           title="Editar cliente">
                            <i class="bi bi-journal-text"></i>
                        </a>
                    </td>

                    <td class="text-center">
                        <button class="btn btn-sm btn-outline-danger"
                                onclick="deleteClient(@client.Id, this)"
                                title="Excluir cliente">
                            <i class="bi bi-trash"></i>
                        </button>
                    </td>

                </tr>
            }
        </tbody>  
    </table>
</div>


@section Scripts {
    <script>
        async function deleteClient(id, button) {
            const confirmDelete = confirm("Tem certeza que deseja excluir este cliente?");
            if (!confirmDelete) return;

            try {
                const response = await fetch(`/Client/DeleteClient/${id}`, {
                    method: 'DELETE'
                });

                if (response.ok) {
                    const row = button.closest('tr');
                    row.remove();
                } else {
                    console.log("Erro ao excluir cliente.");
                }
            } catch (error) {
                console.error(error);
                 console.log("Erro ao comunicar com o servidor.");
            }
        }
    </script>
}
