@using TManagementOrders.Domain.Entities
@model Client

@{
    bool isEdit = Model?.Id > 0;
    ViewData["Title"] = isEdit ? "Editar cliente" : "Criar novo cliente";
    string buttonLabel = isEdit ? "Atualizar cliente" : "Registrar cliente";
}

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card shadow-sm border-0">
                <div class="card-body">
                    <h2 class="card-title text-center mb-4">@ViewData["Title"]</h2>

                    <form id="clientForm">
                        @if (isEdit)
                        {
                            <input type="hidden" asp-for="Id" id="Id" />
                        }

                        <div class="form-group mb-3">
                            <label asp-for="Name" class="control-label"></label>
                            <input asp-for="Name" class="form-control" id="Name" />
                            <span asp-validation-for="Name" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Email" class="control-label"></label>
                            <input asp-for="Email" class="form-control" type="email" id="Email" />
                            <span asp-validation-for="Email" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Telephone" class="control-label"></label>
                            <input asp-for="Telephone" class="form-control" type="number" id="Telephone" />
                            <span asp-validation-for="Telephone" class="text-danger"></span>
                        </div>

                        <div class="form-group mb-4">
                            <label asp-for="DateRegister" class="control-label"></label>
                            <input asp-for="DateRegister" class="form-control" type="date" id="DateRegister" />
                            <span asp-validation-for="DateRegister" class="text-danger"></span>
                        </div>

                        <div class="text-center">
                            <button type="submit" class="btn btn-primary w-100">@buttonLabel</button>
                        </div>
                    </form>

                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")

    <script>
        document.getElementById("clientForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const form = e.target;

            const client = {
                id: parseInt(document.getElementById("Id")?.value || 0),
                name: document.getElementById("Name").value,
                email: document.getElementById("Email").value,
                telephone: document.getElementById("Telephone").value,
                dateRegister: document.getElementById("DateRegister").value
            };

            const isEdit = client.id > 0;
            const url = isEdit
                ? `/Client/EditClient/${client.id}`
                : `/Client/CreateClient`;

            const method = isEdit ? "PUT" : "POST";

            try {
                const response = await fetch(url, {
                    method: method,
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify(client)
                });

                if (response.ok) {                    
                    window.location.href = "/Client/Index";
                } else {
                    console.log("Erro ao salvar cliente.");
                }
            } catch (err) {
                console.log(err);                
            }
        });
    </script>
}
